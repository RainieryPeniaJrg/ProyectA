// <auto-generated />
using System;
using BE_ProyectoA.Infraestructure.Persistence.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BE_ProyectoA.Infraestructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240423092459_Relaciones")]
    partial class Relaciones
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BE_ProyectoA.Core.Domain.Entities.CoordinadorGeneral.CoordinadoresGenerales", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("CantidadVotantes")
                        .HasColumnType("int");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("NumeroTelefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("CoordinadoresGenerales");
                });

            modelBuilder.Entity("BE_ProyectoA.Core.Domain.Entities.Coordinadores.SubCoordinadores", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("CantidadVotantes")
                        .HasColumnType("int");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("CoordinadorsGeneralesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("NumeroTelefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("CoordinadorsGeneralesId");

                    b.ToTable("SubCoordinadores");
                });

            modelBuilder.Entity("BE_ProyectoA.Core.Domain.Entities.Director.Directores", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CantidadVotantes")
                        .HasColumnType("int");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NumeroTelefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Directores");
                });

            modelBuilder.Entity("BE_ProyectoA.Core.Domain.Entities.DirigenteMultiplicador.DirigentesMultiplicadores", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("CantidadVotantes")
                        .HasColumnType("int");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("NumeroTelefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("SubCoordinadoresId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SubCoordinadoresId");

                    b.ToTable("DirigentesMultiplicadores");
                });

            modelBuilder.Entity("BE_ProyectoA.Core.Domain.Entities.GruposEntity.Grupos", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("CoordinadoresGeneralesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DirigentesMultiplicadoresId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NombreGrupo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SubCoordinadoresId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CoordinadoresGeneralesId");

                    b.HasIndex("DirigentesMultiplicadoresId");

                    b.HasIndex("SubCoordinadoresId");

                    b.ToTable("Grupos");
                });

            modelBuilder.Entity("BE_ProyectoA.Core.Domain.Entities.Votantes.Votante", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("NumeroTelefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Votantes");
                });

            modelBuilder.Entity("BE_ProyectoA.Core.Domain.Entities.CoordinadorGeneral.CoordinadoresGenerales", b =>
                {
                    b.OwnsOne("BE_ProyectoA.Core.Domain.ValueObjects.Direccion", "Direccion", b1 =>
                        {
                            b1.Property<Guid>("CoordinadoresGeneralesId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Provincia")
                                .IsRequired()
                                .HasMaxLength(30)
                                .HasColumnType("nvarchar(30)");

                            b1.Property<string>("Sector")
                                .IsRequired()
                                .HasMaxLength(30)
                                .HasColumnType("nvarchar(30)");

                            b1.HasKey("CoordinadoresGeneralesId");

                            b1.ToTable("CoordinadoresGenerales");

                            b1.WithOwner()
                                .HasForeignKey("CoordinadoresGeneralesId");
                        });

                    b.Navigation("Direccion")
                        .IsRequired();
                });

            modelBuilder.Entity("BE_ProyectoA.Core.Domain.Entities.Coordinadores.SubCoordinadores", b =>
                {
                    b.HasOne("BE_ProyectoA.Core.Domain.Entities.CoordinadorGeneral.CoordinadoresGenerales", "Coordinadores")
                        .WithMany("SubCoordinadores")
                        .HasForeignKey("CoordinadorsGeneralesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("BE_ProyectoA.Core.Domain.ValueObjects.Direccion", "Direccion", b1 =>
                        {
                            b1.Property<Guid>("SubCoordinadoresId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Provincia")
                                .IsRequired()
                                .HasMaxLength(30)
                                .HasColumnType("nvarchar(30)");

                            b1.Property<string>("Sector")
                                .IsRequired()
                                .HasMaxLength(30)
                                .HasColumnType("nvarchar(30)");

                            b1.HasKey("SubCoordinadoresId");

                            b1.ToTable("SubCoordinadores");

                            b1.WithOwner()
                                .HasForeignKey("SubCoordinadoresId");
                        });

                    b.Navigation("Coordinadores");

                    b.Navigation("Direccion")
                        .IsRequired();
                });

            modelBuilder.Entity("BE_ProyectoA.Core.Domain.Entities.DirigenteMultiplicador.DirigentesMultiplicadores", b =>
                {
                    b.HasOne("BE_ProyectoA.Core.Domain.Entities.Coordinadores.SubCoordinadores", "SubCoordinadores")
                        .WithMany("DirigentesMultiplicadores")
                        .HasForeignKey("SubCoordinadoresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("BE_ProyectoA.Core.Domain.ValueObjects.Direccion", "Direccion", b1 =>
                        {
                            b1.Property<Guid>("DirigentesMultiplicadoresId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Provincia")
                                .IsRequired()
                                .HasMaxLength(30)
                                .HasColumnType("nvarchar(30)");

                            b1.Property<string>("Sector")
                                .IsRequired()
                                .HasMaxLength(30)
                                .HasColumnType("nvarchar(30)");

                            b1.HasKey("DirigentesMultiplicadoresId");

                            b1.ToTable("DirigentesMultiplicadores");

                            b1.WithOwner()
                                .HasForeignKey("DirigentesMultiplicadoresId");
                        });

                    b.Navigation("Direccion")
                        .IsRequired();

                    b.Navigation("SubCoordinadores");
                });

            modelBuilder.Entity("BE_ProyectoA.Core.Domain.Entities.GruposEntity.Grupos", b =>
                {
                    b.HasOne("BE_ProyectoA.Core.Domain.Entities.CoordinadorGeneral.CoordinadoresGenerales", "CoordinadoresGenerales")
                        .WithMany("Grupos")
                        .HasForeignKey("CoordinadoresGeneralesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BE_ProyectoA.Core.Domain.Entities.DirigenteMultiplicador.DirigentesMultiplicadores", "DirigentesMultiplicadores")
                        .WithMany("Grupos")
                        .HasForeignKey("DirigentesMultiplicadoresId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BE_ProyectoA.Core.Domain.Entities.Coordinadores.SubCoordinadores", "SubCoordinadores")
                        .WithMany("Grupos")
                        .HasForeignKey("SubCoordinadoresId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CoordinadoresGenerales");

                    b.Navigation("DirigentesMultiplicadores");

                    b.Navigation("SubCoordinadores");
                });

            modelBuilder.Entity("BE_ProyectoA.Core.Domain.Entities.Votantes.Votante", b =>
                {
                    b.OwnsOne("BE_ProyectoA.Core.Domain.ValueObjects.Direccion", "Direccion", b1 =>
                        {
                            b1.Property<Guid>("VotanteId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Provincia")
                                .IsRequired()
                                .HasMaxLength(30)
                                .HasColumnType("nvarchar(30)");

                            b1.Property<string>("Sector")
                                .IsRequired()
                                .HasMaxLength(30)
                                .HasColumnType("nvarchar(30)");

                            b1.HasKey("VotanteId");

                            b1.ToTable("Votantes");

                            b1.WithOwner()
                                .HasForeignKey("VotanteId");
                        });

                    b.Navigation("Direccion")
                        .IsRequired();
                });

            modelBuilder.Entity("BE_ProyectoA.Core.Domain.Entities.CoordinadorGeneral.CoordinadoresGenerales", b =>
                {
                    b.Navigation("Grupos");

                    b.Navigation("SubCoordinadores");
                });

            modelBuilder.Entity("BE_ProyectoA.Core.Domain.Entities.Coordinadores.SubCoordinadores", b =>
                {
                    b.Navigation("DirigentesMultiplicadores");

                    b.Navigation("Grupos");
                });

            modelBuilder.Entity("BE_ProyectoA.Core.Domain.Entities.DirigenteMultiplicador.DirigentesMultiplicadores", b =>
                {
                    b.Navigation("Grupos");
                });
#pragma warning restore 612, 618
        }
    }
}
